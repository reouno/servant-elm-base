{-# LANGUAGE DataKinds         #-}
{-# LANGUAGE OverloadedLabels  #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE TypeOperators     #-}

module Entity.Entity where

import           Control.Lens
import           Data.Extensible
import           Data.Text
import           Data.Time       ( UTCTime )

type User
   = Record '[ "name" >: Text, "email" >: Maybe Text, "createdAt" >: UTCTime]

type UserId = Int

type UserRecord = (UserId, User)

type Url = Text

type Diary
   = Record '[ "title" >: Text, "content" >: Text, "imageUrls" >: [Text], "allowAutoEdit" >: Bool, "createdAt" >: UTCTime, "updatedAt" >: UTCTime]

type DiaryId = Int

type DiaryRecord = (DiaryId, Diary)

user1 :: User
user1 =
  #name @= "Neo" <: #email @= Just "neo@matrix.mov" <: #createdAt @=
  (read "1999-09-11 00:00:00" :: UTCTime) <:
  emptyRecord

user1Id :: UserId
user1Id = 1

user1Record :: UserRecord
user1Record = (user1Id, user1)

user2 :: User
user2 =
  #name @= "Morpheus" <: #email @= Nothing <: #createdAt @=
  (read "1812-09-11 00:00:00" :: UTCTime) <:
  emptyRecord

user2Id :: UserId
user2Id = 2

user2Record :: UserRecord
user2Record = (user2Id, user2)

{-
 - user1 ^. #name
 - --> "Neo"
 -}
diary1 :: Diary
diary1 =
  #title @= "AutoDiary" <: #content @=
  "This is the first diary which is generated by Apricot. Images may be included in the diary as well." <:
  #imageUrls @=
  ["https://upload.wikimedia.org/wikipedia/commons/c/c4/Apricot_fruit.jpg"] <:
  #allowAutoEdit @=
  True <:
  #createdAt @=
  (read "2019-11-11 11:11:11" :: UTCTime) <:
  #updatedAt @=
  (read "2019-11-11 11:11:11" :: UTCTime) <:
  emptyRecord

diary1Id :: DiaryId
diary1Id = 1

diary1Record :: DiaryRecord
diary1Record = (diary1Id, diary1)
